version: '3.4'

services:
  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    ports:
        - "15672:15672"
        - "5672:5672"
    expose:
        - 15672
        - 5672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  authenticationdatabase:
    image: mysql
    container_name: AuthenticationDatabase
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - "3306:3306"

  userdatabase:
    image: mysql
    container_name: UserDatabase
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"

  tweetdatabase:
    image: mongo
    container_name: TweetDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    links:
      - authenticationdatabase
      - userdatabase
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

  gateway:
    image: ${DOCKER_REGISTRY-}gateway    
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
      - "50000:80"
      - "50001:443"

  filemanagementservice:
    image: ${DOCKER_REGISTRY-}filemanagementservice    
    build:
      context: .
      dockerfile: FileManagementService/Dockerfile

  authenticationservice:
    image: ${DOCKER_REGISTRY-}authenticationservice
    build:
      context: .
      dockerfile: AuthenticationService/Dockerfile
    restart: "on-failure"
    depends_on:
        - rabbit
    links: 
        - rabbit

  tweetservice:
    image: ${DOCKER_REGISTRY-}tweetservice
    build:
      context: .
      dockerfile: TweetService/Dockerfile
    restart: "on-failure"
    depends_on:
        - rabbit
    links: 
        - rabbit

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: UserService/Dockerfile
    restart: "on-failure"
    depends_on:
        - rabbit
    links: 
        - rabbit