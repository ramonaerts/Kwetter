version: '3.4'

services:
  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    ports:
        - "15672:15672"
        - "5672:5672"
    expose:
        - 15672
        - 5672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  consul:
    image: consul:latest
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    container_name: consul
    ports:
      - "8500:8500"

  authenticationdatabase:
    image: mysql
    container_name: AuthenticationDatabase
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - "3306:3306"

  userdatabase:
    image: mysql
    container_name: UserDatabase
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"

  tweetdatabase:
    image: mongo
    container_name: TweetDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  followdatabase:
    image: mongo
    container_name: FollowDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27018:27017"

  timelinedatabase:
    image: mongo
    container_name: TimelineDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27019:27017"

  moderationdatabase:
    image: mongo
    container_name: ModerationDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27020:27017"

  likedatabase:
    image: mongo
    container_name: LikeDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27021:27017"

  trendingdatabase:
    image: mongo
    container_name: TrendingDatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27022:27017"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    links:
      - authenticationdatabase
      - userdatabase
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

  gateway:
    image: ${DOCKER_REGISTRY-}gateway    
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
      - "50000:80"
      - "50001:443"

  filemanagementservice:
    image: ${DOCKER_REGISTRY-}filemanagementservice    
    build:
      context: .
      dockerfile: FileManagementService/Dockerfile
    ports:
      - "5030:80"
      - "5031:443"

  authenticationservice:
    image: ${DOCKER_REGISTRY-}authenticationservice
    build:
      context: .
      dockerfile: AuthenticationService/Dockerfile
    ports:
      - "5020:80"
      - "5021:443"

  tweetservice:
    image: ${DOCKER_REGISTRY-}tweetservice
    build:
      context: .
      dockerfile: TweetService/Dockerfile
    ports:
      - "5010:80"
      - "5011:443"

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - "5040:80"
      - "5041:443"

  followservice:
    image: ${DOCKER_REGISTRY-}followservice
    build:
      context: .
      dockerfile: FollowService/Dockerfile
    ports:
      - "5050:80"
      - "5051:443"

  timelineservice:
    image: ${DOCKER_REGISTRY-}timelineservice
    build:
      context: .
      dockerfile: TimelineService/Dockerfile
    ports:
      - "5060:80"
      - "5061:443"

  moderationservice:
    image: ${DOCKER_REGISTRY-}moderationservice
    build:
      context: .
      dockerfile: ModerationService/Dockerfile
    ports:
      - "5070:80"
      - "5071:443"

  likeservice:
    image: ${DOCKER_REGISTRY-}likeservice
    build:
      context: .
      dockerfile: LikeService/Dockerfile
    ports:
      - "5080:80"
      - "5081:443"

  trendingService:
    image: ${DOCKER_REGISTRY-}trendingService
    build:
      context: .
      dockerfile: TrendingService/Dockerfile
    ports:
      - "5090:80"
      - "5091:443"